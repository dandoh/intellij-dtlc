FILE
  PsiComment(line comment)('-- This is a demonstration showing that sum types')
  PsiWhiteSpace('\n')
  PsiComment(line comment)('-- in Mini-TT are first-class.')
  PsiWhiteSpace('\n')
  MiniTTConstDeclarationImpl(CONST_DECLARATION)
    PsiElement(CONST_KEYWORD)('const')
    PsiWhiteSpace(' ')
    MiniTTAtomPatternImpl(ATOM_PATTERN)
      PsiElement(IDENTIFIER)('boolA')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    MiniTTSumImpl(SUM)
      PsiElement(SUM_KEYWORD)('Sum')
      PsiWhiteSpace(' ')
      MiniTTBranchesImpl(BRANCHES)
        PsiElement(LEFT_BRACE)('{')
        PsiWhiteSpace(' ')
        MiniTTConstructorImpl(CONSTRUCTOR)
          PsiElement(CONSTRUCTOR_NAME)('True')
        PsiWhiteSpace(' ')
        PsiElement(SEP)('|')
        PsiWhiteSpace(' ')
        MiniTTConstructorImpl(CONSTRUCTOR)
          PsiElement(CONSTRUCTOR_NAME)('False')
        PsiWhiteSpace(' ')
        PsiElement(RIGHT_BRACE)('}')
    PsiElement(SEMICOLON)(';')
    PsiWhiteSpace('\n\n')
    PsiComment(line comment)('-- See?')
    PsiWhiteSpace('\n')
    MiniTTDeclarationImpl(DECLARATION)
      PsiElement(LET_KEYWORD)('let')
      PsiWhiteSpace(' ')
      MiniTTAtomPatternImpl(ATOM_PATTERN)
        PsiElement(IDENTIFIER)('myNot')
      PsiElement(COLON)(':')
      PsiWhiteSpace(' ')
      MiniTTFunctionTypeImpl(FUNCTION_TYPE)
        MiniTTSumImpl(SUM)
          PsiElement(SUM_KEYWORD)('Sum')
          PsiWhiteSpace(' ')
          MiniTTBranchesImpl(BRANCHES)
            PsiElement(LEFT_BRACE)('{')
            PsiWhiteSpace(' ')
            MiniTTConstructorImpl(CONSTRUCTOR)
              PsiElement(CONSTRUCTOR_NAME)('True')
            PsiWhiteSpace(' ')
            PsiElement(SEP)('|')
            PsiWhiteSpace(' ')
            MiniTTConstructorImpl(CONSTRUCTOR)
              PsiElement(CONSTRUCTOR_NAME)('False')
            PsiWhiteSpace(' ')
            PsiElement(RIGHT_BRACE)('}')
        PsiWhiteSpace(' ')
        PsiElement(ARROW)('->')
        PsiWhiteSpace(' ')
        MiniTTVariableImpl(VARIABLE)
          PsiElement(IDENTIFIER)('boolA')
      PsiWhiteSpace(' ')
      PsiElement(EQ)('=')
      PsiWhiteSpace(' ')
      MiniTTSplitImpl(SPLIT)
        PsiElement(SPLIT_KEYWORD)('split')
        PsiWhiteSpace('\n  ')
        MiniTTChoicesImpl(CHOICES)
          PsiElement(LEFT_BRACE)('{')
          PsiWhiteSpace(' ')
          MiniTTPatternMatchImpl(PATTERN_MATCH)
            PsiElement(CONSTRUCTOR_NAME)('True')
            PsiWhiteSpace(' ')
            PsiElement(DOUBLE_ARROW)('=>')
            PsiWhiteSpace(' ')
            MiniTTConstructorImpl(CONSTRUCTOR)
              PsiElement(CONSTRUCTOR_NAME)('False')
          PsiWhiteSpace('\n  ')
          PsiElement(SEP)('|')
          PsiWhiteSpace(' ')
          MiniTTPatternMatchImpl(PATTERN_MATCH)
            PsiElement(CONSTRUCTOR_NAME)('False')
            PsiWhiteSpace(' ')
            PsiElement(DOUBLE_ARROW)('=>')
            PsiWhiteSpace(' ')
            MiniTTConstructorImpl(CONSTRUCTOR)
              PsiElement(CONSTRUCTOR_NAME)('True')
          PsiWhiteSpace('\n  ')
          PsiElement(RIGHT_BRACE)('}')
      PsiElement(SEMICOLON)(';')