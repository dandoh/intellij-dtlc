FILE
  MiniTTDeclarationImpl(DECLARATION)
    PsiElement(LET_KEYWORD)('let')
    PsiWhiteSpace(' ')
    MiniTTAtomPatternImpl(ATOM_PATTERN)
      PsiElement(IDENTIFIER)('a')
    PsiWhiteSpace(' ')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    MiniTTUniverseImpl(UNIVERSE)
      PsiElement(TYPE_UNIVERSE)('Type')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    MiniTTOneImpl(ONE)
      PsiElement(ONE_KEYWORD)('1')
    PsiElement(SEMICOLON)(';')
    PsiWhiteSpace('\n')
    MiniTTDeclarationImpl(DECLARATION)
      PsiElement(LET_KEYWORD)('let')
      PsiWhiteSpace(' ')
      MiniTTAtomPatternImpl(ATOM_PATTERN)
        PsiElement(IDENTIFIER)('b')
      PsiWhiteSpace(' ')
      PsiElement(COLON)(':')
      PsiWhiteSpace(' ')
      MiniTTUniverseImpl(UNIVERSE)
        PsiElement(TYPE_UNIVERSE)('Type')
      PsiWhiteSpace(' ')
      PsiElement(EQ)('=')
      PsiWhiteSpace(' ')
      MiniTTOneImpl(ONE)
        PsiElement(ONE_KEYWORD)('1')
      PsiElement(SEMICOLON)(';')
      PsiWhiteSpace('\n\n')
      PsiComment(line comment)('-- Arrows are equivalent to \Pi _: a. b')
      PsiWhiteSpace('\n')
      MiniTTDeclarationImpl(DECLARATION)
        PsiElement(LET_KEYWORD)('let')
        PsiWhiteSpace(' ')
        MiniTTAtomPatternImpl(ATOM_PATTERN)
          PsiElement(IDENTIFIER)('f')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        MiniTTFunctionTypeImpl(FUNCTION_TYPE)
          MiniTTVariableImpl(VARIABLE)
            PsiElement(IDENTIFIER)('a')
          PsiWhiteSpace(' ')
          PsiElement(ARROW)('->')
          PsiWhiteSpace(' ')
          MiniTTVariableImpl(VARIABLE)
            PsiElement(IDENTIFIER)('b')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        MiniTTLambdaExpressionImpl(LAMBDA_EXPRESSION)
          PsiElement(LAMBDA)('\lambda')
          PsiWhiteSpace(' ')
          MiniTTAtomPatternImpl(ATOM_PATTERN)
            PsiElement(IDENTIFIER)('x')
          PsiWhiteSpace(' ')
          PsiElement(DOT)('.')
          PsiWhiteSpace(' ')
          MiniTTVariableImpl(VARIABLE)
            PsiElement(IDENTIFIER)('x')
        PsiElement(SEMICOLON)(';')
        PsiWhiteSpace('\n\n')
        PsiComment(line comment)('-- Asterisks are equivalent to \Sigma _: a. b')
        PsiWhiteSpace('\n')
        MiniTTDeclarationImpl(DECLARATION)
          PsiElement(LET_KEYWORD)('let')
          PsiWhiteSpace(' ')
          MiniTTAtomPatternImpl(ATOM_PATTERN)
            PsiElement(IDENTIFIER)('p')
          PsiWhiteSpace(' ')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          MiniTTPairTypeImpl(PAIR_TYPE)
            MiniTTVariableImpl(VARIABLE)
              PsiElement(IDENTIFIER)('a')
            PsiWhiteSpace(' ')
            PsiElement(MUL)('*')
            PsiWhiteSpace(' ')
            MiniTTVariableImpl(VARIABLE)
              PsiElement(IDENTIFIER)('b')
          PsiWhiteSpace(' ')
          PsiElement(EQ)('=')
          PsiWhiteSpace(' ')
          MiniTTPairImpl(PAIR)
            MiniTTUnitImpl(UNIT)
              PsiElement(UNIT_KEYWORD)('0')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            MiniTTUnitImpl(UNIT)
              PsiElement(UNIT_KEYWORD)('0')
          PsiElement(SEMICOLON)(';')
          PsiWhiteSpace('\n\n')
          PsiComment(line comment)('-- You can ask the compiler to infer the type directly')
          PsiWhiteSpace('\n')
          MiniTTConstDeclarationImpl(CONST_DECLARATION)
            PsiElement(CONST_KEYWORD)('const')
            PsiWhiteSpace(' ')
            MiniTTAtomPatternImpl(ATOM_PATTERN)
              PsiElement(IDENTIFIER)('infer_my_type')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            MiniTTPairImpl(PAIR)
              MiniTTOneImpl(ONE)
                PsiElement(ONE_KEYWORD)('1')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              MiniTTOneImpl(ONE)
                PsiElement(ONE_KEYWORD)('1')
            PsiElement(SEMICOLON)(';')