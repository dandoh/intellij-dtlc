FILE
  MiniTTDeclarationExpressionImpl(DECLARATION_EXPRESSION)
    MiniTTDeclarationImpl(DECLARATION)
      PsiElement(LET_KEYWORD)('let')
      PsiWhiteSpace(' ')
      MiniTTAtomPatternImpl(ATOM_PATTERN)
        PsiElement(IDENTIFIER)('bool')
      PsiElement(COLON)(':')
      PsiWhiteSpace(' ')
      MiniTTUniverseImpl(UNIVERSE)
        PsiElement(TYPE_UNIVERSE)('Type')
      PsiWhiteSpace(' ')
      PsiElement(EQ)('=')
      PsiWhiteSpace(' ')
      MiniTTSumImpl(SUM)
        PsiElement(SUM_KEYWORD)('Sum')
        PsiWhiteSpace(' ')
        MiniTTBranchesImpl(BRANCHES)
          PsiElement(LEFT_BRACE)('{')
          PsiWhiteSpace(' ')
          MiniTTConstructorImpl(CONSTRUCTOR)
            PsiElement(CONSTRUCTOR_NAME)('True')
          PsiWhiteSpace(' ')
          PsiElement(SEP)('|')
          PsiWhiteSpace(' ')
          MiniTTConstructorImpl(CONSTRUCTOR)
            PsiElement(CONSTRUCTOR_NAME)('False')
          PsiWhiteSpace(' ')
          PsiElement(RIGHT_BRACE)('}')
      PsiElement(SEMICOLON)(';')
    PsiWhiteSpace('\n')
    PsiComment(line comment)('-- Each constructor have only one argument')
    PsiWhiteSpace('\n')
    PsiComment(line comment)('-- Capitalized names are constructors so constructor calls are lexically')
    PsiWhiteSpace('\n')
    PsiComment(line comment)('-- recognizable')
    PsiWhiteSpace('\n\n')
    MiniTTDeclarationExpressionImpl(DECLARATION_EXPRESSION)
      MiniTTDeclarationImpl(DECLARATION)
        PsiElement(LET_KEYWORD)('let')
        PsiWhiteSpace(' ')
        MiniTTAtomPatternImpl(ATOM_PATTERN)
          PsiElement(IDENTIFIER)('not')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        MiniTTFunctionTypeImpl(FUNCTION_TYPE)
          MiniTTVariableImpl(VARIABLE)
            PsiElement(IDENTIFIER)('bool')
          PsiWhiteSpace(' ')
          PsiElement(ARROW)('->')
          PsiWhiteSpace(' ')
          MiniTTVariableImpl(VARIABLE)
            PsiElement(IDENTIFIER)('bool')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        MiniTTSplitImpl(SPLIT)
          PsiElement(SPLIT_KEYWORD)('split')
          PsiWhiteSpace('\n ')
          MiniTTChoicesImpl(CHOICES)
            PsiElement(LEFT_BRACE)('{')
            PsiWhiteSpace(' ')
            MiniTTPatternMatchImpl(PATTERN_MATCH)
              PsiElement(CONSTRUCTOR_NAME)('True')
              PsiWhiteSpace(' ')
              PsiElement(DOUBLE_ARROW)('=>')
              PsiWhiteSpace(' ')
              MiniTTConstructorImpl(CONSTRUCTOR)
                PsiElement(CONSTRUCTOR_NAME)('False')
            PsiWhiteSpace('\n ')
            PsiElement(SEP)('|')
            PsiWhiteSpace(' ')
            MiniTTPatternMatchImpl(PATTERN_MATCH)
              PsiElement(CONSTRUCTOR_NAME)('False')
              PsiWhiteSpace(' ')
              PsiElement(DOUBLE_ARROW)('=>')
              PsiWhiteSpace(' ')
              MiniTTConstructorImpl(CONSTRUCTOR)
                PsiElement(CONSTRUCTOR_NAME)('True')
            PsiWhiteSpace('\n ')
            PsiElement(RIGHT_BRACE)('}')
        PsiElement(SEMICOLON)(';')
      PsiWhiteSpace('\n')
      PsiComment(line comment)('-- Pattern matching')
      PsiWhiteSpace('\n\n')
      MiniTTDeclarationExpressionImpl(DECLARATION_EXPRESSION)
        MiniTTDeclarationImpl(DECLARATION)
          PsiElement(LET_KEYWORD)('let')
          PsiWhiteSpace(' ')
          MiniTTAtomPatternImpl(ATOM_PATTERN)
            PsiElement(IDENTIFIER)('boolean_id')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          MiniTTFunctionTypeImpl(FUNCTION_TYPE)
            MiniTTVariableImpl(VARIABLE)
              PsiElement(IDENTIFIER)('bool')
            PsiWhiteSpace(' ')
            PsiElement(ARROW)('->')
            PsiWhiteSpace(' ')
            MiniTTVariableImpl(VARIABLE)
              PsiElement(IDENTIFIER)('bool')
          PsiWhiteSpace(' ')
          PsiElement(EQ)('=')
          PsiWhiteSpace(' ')
          MiniTTLambdaExpressionImpl(LAMBDA_EXPRESSION)
            PsiElement(LAMBDA)('\lambda')
            PsiWhiteSpace(' ')
            MiniTTAtomPatternImpl(ATOM_PATTERN)
              PsiElement(IDENTIFIER)('n')
            PsiWhiteSpace(' ')
            PsiElement(DOT)('.')
            PsiWhiteSpace(' ')
            MiniTTVariableImpl(VARIABLE)
              PsiElement(IDENTIFIER)('n')
          PsiElement(SEMICOLON)(';')
        PsiWhiteSpace('\n')
        PsiComment(line comment)('-- Simple functions can be defined with lambdas')
        PsiWhiteSpace('\n\n')
        MiniTTDeclarationExpressionImpl(DECLARATION_EXPRESSION)
          MiniTTDeclarationImpl(DECLARATION)
            PsiElement(LET_KEYWORD)('let')
            PsiWhiteSpace(' ')
            MiniTTAtomPatternImpl(ATOM_PATTERN)
              PsiElement(IDENTIFIER)('and')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            MiniTTFunctionTypeImpl(FUNCTION_TYPE)
              MiniTTVariableImpl(VARIABLE)
                PsiElement(IDENTIFIER)('bool')
              PsiWhiteSpace(' ')
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              MiniTTFunctionTypeImpl(FUNCTION_TYPE)
                MiniTTVariableImpl(VARIABLE)
                  PsiElement(IDENTIFIER)('bool')
                PsiWhiteSpace(' ')
                PsiElement(ARROW)('->')
                PsiWhiteSpace(' ')
                MiniTTVariableImpl(VARIABLE)
                  PsiElement(IDENTIFIER)('bool')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            MiniTTSplitImpl(SPLIT)
              PsiElement(SPLIT_KEYWORD)('split')
              PsiWhiteSpace('\n ')
              MiniTTChoicesImpl(CHOICES)
                PsiElement(LEFT_BRACE)('{')
                PsiWhiteSpace(' ')
                MiniTTPatternMatchImpl(PATTERN_MATCH)
                  PsiElement(CONSTRUCTOR_NAME)('True')
                  PsiWhiteSpace(' ')
                  PsiElement(DOUBLE_ARROW)('=>')
                  PsiWhiteSpace(' ')
                  MiniTTVariableImpl(VARIABLE)
                    PsiElement(IDENTIFIER)('boolean_id')
                PsiWhiteSpace('\n ')
                PsiElement(SEP)('|')
                PsiWhiteSpace(' ')
                MiniTTPatternMatchImpl(PATTERN_MATCH)
                  PsiElement(CONSTRUCTOR_NAME)('False')
                  PsiWhiteSpace(' ')
                  PsiElement(DOUBLE_ARROW)('=>')
                  PsiWhiteSpace(' ')
                  MiniTTLambdaExpressionImpl(LAMBDA_EXPRESSION)
                    PsiElement(LAMBDA)('\lambda')
                    PsiWhiteSpace(' ')
                    MiniTTAtomPatternImpl(ATOM_PATTERN)
                      PsiElement(META_VAR)('_')
                    PsiElement(DOT)('.')
                    PsiWhiteSpace(' ')
                    MiniTTConstructorImpl(CONSTRUCTOR)
                      PsiElement(CONSTRUCTOR_NAME)('False')
                PsiWhiteSpace('\n ')
                PsiElement(RIGHT_BRACE)('}')
            PsiElement(SEMICOLON)(';')
  PsiWhiteSpace('\n')
  PsiComment(line comment)('-- Nested functions')