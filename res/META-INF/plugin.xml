<idea-plugin>
	<name>Dependently-Typed Lambda Calculus</name>
	<vendor email="ice1000kotlin@foxmail.com" url="https://ice1000.org">ice1000</vendor>
	<idea-version since-build="173.0"/>

	<depends>com.intellij.modules.lang</depends>
	<resource-bundle>org.ice1000.tt.tt-bundle</resource-bundle>

	<extensions defaultExtensionNs="com.intellij">
		<!--Common-->
		<fileTypeFactory implementation="org.ice1000.tt.TTFileTypeFactory"/>
		<errorHandler implementation="org.ice1000.tt.error.GitHubErrorReporter"/>
		<additionalTextAttributes scheme="Default" file="/colorSchemes/TT.xml"/>
		<additionalTextAttributes scheme="Darcula" file="/colorSchemes/TT_dark.xml"/>
		<defaultLiveTemplatesProvider implementation="org.ice1000.tt.editing.TTLiveTemplateProvider"/>

		<!--Live template contexts-->
		<liveTemplateContext implementation="org.ice1000.tt.editing.MiniTTDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.OwODefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.AgdaDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.ACoreDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.RedPrlDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.MLPolyRDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.CubicalTTDefaultContext"/>
		<liveTemplateContext implementation="org.ice1000.tt.editing.TTParentContext"/>

		<!--Agda-->
		<configurationType implementation="org.ice1000.tt.execution.AgdaRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.AgdaRunConfigurationProducer"/>
		<lang.parserDefinition language="Agda" implementationClass="org.ice1000.tt.psi.agda.AgdaParserDefinition"/>
		<lang.syntaxHighlighterFactory language="Agda" implementationClass="org.ice1000.tt.editing.agda.AgdaHighlighterFactory"/>
		<lang.commenter language="Agda" implementationClass="org.ice1000.tt.editing.HaskellCommenter"/>
		<lang.braceMatcher language="Agda" implementationClass="org.ice1000.tt.editing.agda.AgdaBraceMatcher"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.agda.AgdaColorSettingsPage"/>
		<lang.foldingBuilder language="Agda" implementationClass="org.ice1000.tt.editing.agda.AgdaFoldingBuilder"/>
		<annotator language="Agda" implementationClass="org.ice1000.tt.editing.agda.AgdaAnnotator"/>
		<lang.elementManipulator
			forClass="org.ice1000.tt.psi.agda.AgdaStringMixin"
			implementationClass="org.ice1000.tt.psi.agda.AgdaStringManipulator"/>

		<!--CubicalTT-->
		<configurationType implementation="org.ice1000.tt.execution.CubicalTTRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.CubicalTTRunConfigurationProducer"/>
		<lang.parserDefinition language="CubicalTT" implementationClass="org.ice1000.tt.psi.cubicaltt.CubicalTTParserDefinition"/>
		<lang.commenter language="CubicalTT" implementationClass="org.ice1000.tt.editing.HaskellCommenter"/>
		<lang.braceMatcher language="CubicalTT" implementationClass="org.ice1000.tt.editing.cubicaltt.CubicalTTBraceMatcher"/>
		<lang.findUsagesProvider language="CubicalTT" implementationClass="org.ice1000.tt.editing.cubicaltt.CubicalTTFindUsagesProvider"/>
		<lang.syntaxHighlighterFactory language="CubicalTT" implementationClass="org.ice1000.tt.editing.cubicaltt.CubicalTTHighlighterFactory"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.cubicaltt.CubicalTTColorSettingsPage"/>

		<!--MLPolyR-->
		<configurationType implementation="org.ice1000.tt.execution.MLPolyRRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.MLPolyRRunConfigurationProducer"/>
		<lang.parserDefinition language="MLPolyR" implementationClass="org.ice1000.tt.psi.mlpolyr.MLPolyRParserDefinition"/>
		<lang.syntaxHighlighterFactory language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRHighlighterFactory"/>
		<lang.commenter language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRCommenter"/>
		<lang.findUsagesProvider language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRFindUsagesProvider"/>
		<lang.braceMatcher language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRBraceMatcher"/>
		<lang.refactoringSupport language="MLPolyR" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.mlpolyr.MLPolyRColorSettingsPage"/>
		<annotator language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRAnnotator"/>
		<completion.contributor language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRCompletionContributor"/>
		<lang.foldingBuilder language="MLPolyR" implementationClass="org.ice1000.tt.editing.mlpolyr.MLPolyRFoldingBuilder"/>
		<lang.elementManipulator
			forClass="org.ice1000.tt.psi.mlpolyr.MLPolyRStringMixin"
			implementationClass="org.ice1000.tt.psi.mlpolyr.MLPolyRStringManipulator"/>

		<!--Vanilla Mini-TT-->
		<configurationType implementation="org.ice1000.tt.execution.ACoreRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.ACoreRunConfigurationProducer"/>
		<lang.parserDefinition language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.psi.acore.ACoreParserDefinition"/>
		<lang.syntaxHighlighterFactory language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.acore.ACoreHighlighterFactory"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.acore.ACoreColorSettingsPage"/>
		<annotator language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.acore.ACoreAnnotator"/>
		<lang.refactoringSupport language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.findUsagesProvider language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.acore.ACoreFindUsagesProvider"/>
		<lang.commenter language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.HaskellCommenter"/>
		<lang.braceMatcher language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.acore.ACoreBraceMatcher"/>
		<lang.foldingBuilder language="Vanilla Mini-TT" implementationClass="org.ice1000.tt.editing.acore.ACoreFoldingBuilder"/>

		<!--Mini-TT-->
		<configurationType implementation="org.ice1000.tt.execution.MiniTTRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.MiniTTRunConfigurationProducer"/>
		<lang.parserDefinition language="Mini-TT" implementationClass="org.ice1000.tt.psi.minitt.MiniTTParserDefinition"/>
		<lang.syntaxHighlighterFactory language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTHighlighterFactory"/>
		<annotator language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTAnnotator"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.minitt.MiniTTColorSettingsPage"/>
		<lang.commenter language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTCommenter"/>
		<lang.braceMatcher language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTBraceMatcher"/>
		<lang.findUsagesProvider language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTFindUsagesProvider"/>
		<lang.refactoringSupport language="Mini-TT" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.foldingBuilder language="Mini-TT" implementationClass="org.ice1000.tt.editing.minitt.MiniTTFoldingBuilder"/>

		<!--RedPRL-->
		<configurationType implementation="org.ice1000.tt.execution.RedPrlRunConfigurationType"/>
		<runConfigurationProducer implementation="org.ice1000.tt.execution.RedPrlRunConfigurationProducer"/>
		<lang.parserDefinition language="RedPRL" implementationClass="org.ice1000.tt.psi.redprl.RedPrlParserDefinition"/>
		<lang.commenter language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlCommenter"/>
		<annotator language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlAnnotator"/>
		<lang.braceMatcher language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlBraceMatcher"/>
		<lang.findUsagesProvider language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlFindUsagesProvider"/>
		<lang.refactoringSupport language="RedPRL" implementationClass="org.ice1000.tt.editing.InplaceRenameRefactoringSupportProvider"/>
		<lang.syntaxHighlighterFactory language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlHighlighterFactory"/>
		<completion.contributor language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlCompletionContributor"/>
		<colorSettingsPage implementation="org.ice1000.tt.editing.redprl.RedPrlColorSettingsPage"/>
		<lang.foldingBuilder language="RedPRL" implementationClass="org.ice1000.tt.editing.redprl.RedPrlFoldingBuilder"/>

		<projectConfigurable
			groupId="language"
			id="TT.MiniTT.Configurable"
			displayName="Mini-TT"
			instance="org.ice1000.tt.project.MiniTTProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			id="TT.Agda.Configurable"
			displayName="Agda"
			instance="org.ice1000.tt.project.AgdaProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			id="TT.ACore.Configurable"
			displayName="Vanilla Mini-TT"
			instance="org.ice1000.tt.project.ACoreProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			id="TT.MLPolyR.Configurable"
			displayName="MLPolyR"
			instance="org.ice1000.tt.project.MLPolyRProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			id="TT.RedPrl.Configurable"
			displayName="RedPRL"
			instance="org.ice1000.tt.project.RedPrlProjectConfigurable"/>
		<projectConfigurable
			groupId="language"
			id="TT.CubicalTT.Configurable"
			displayName="Cubical-TT"
			instance="org.ice1000.tt.project.CubicalTTProjectConfigurable"/>
	</extensions>

	<project-components>
		<component>
			<implementation-class>org.ice1000.tt.project.MiniTTProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.AgdaProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.ACoreProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.RedPrlProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.MLPolyRProjectSettingsService</implementation-class>
		</component>
		<component>
			<implementation-class>org.ice1000.tt.project.CubicalTTProjectSettingsService</implementation-class>
		</component>
	</project-components>

	<actions>
		<action class="org.ice1000.tt.action.NewTTActionGroup" id="TT.NewGroup">
			<add-to-group group-id="NewGroup" anchor="first"/>
		</action>
	</actions>
</idea-plugin>
